# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/07_svg_dataset.ipynb.

# %% auto 0
__all__ = ['svg_to_stroke_deltas', 'points_to_deltas', 'strokes_to_deltas', 'deltas_to_points', 'points_to_strokes',
           'deltas_to_strokes']

# %% ../nbs/07_svg_dataset.ipynb 6
from .path_helpers import discretize_paths
from .path_transforms import rdpify, rescale_strokes, transform_paths
from .stroke3 import strokes_to_deltas
from .svg_files import load_svg
from .svg_transforms import svg_to_transforms


def svg_to_stroke_deltas(
    input_fname, total_n=1000, min_n=3, target_size=200, epsilon=2.0
):
    paths, attributes, svg_attributes, svg_root = load_svg(input_fname)
    all_strokes = discretize_paths(paths, total_n=total_n, min_n=min_n)

    globally_rescaled_strokes = transform_paths(
        all_strokes, global_transform=svg_to_transforms(svg_root)
    )

    rescaled_strokes = rescale_strokes(globally_rescaled_strokes, target_size)
    rdp_strokes = rdpify(rescaled_strokes, epsilon)
    deltas = strokes_to_deltas(rdp_strokes)

    ## roundtrip / sanity check
    # _rdp_strokes = stroke3.deltas_to_strokes(deltas)
    # display_plot.plot_strokes(_rdp_strokes)

    return deltas, rescaled_strokes

# %% ../nbs/07_svg_dataset.ipynb 7
def points_to_deltas(points):
    p2 = points.copy()
    # first row should stay the same
    # cols 0,1 of every row onwards should be a delta from the previous row.
    p2[1:, :2] = points[1:, :2] - points[:-1, :2]
    return p2

# %% ../nbs/07_svg_dataset.ipynb 8
def strokes_to_deltas(strokes):
    points = strokes_to_points(strokes)
    return points_to_deltas(points)

# %% ../nbs/07_svg_dataset.ipynb 9
def deltas_to_points(_seq):
    seq = np.zeros_like(_seq)
    seq[:, 0:2] = np.cumsum(_seq[:, 0:2], axis=0)
    seq[:, 2] = _seq[:, 2]
    return seq

# %% ../nbs/07_svg_dataset.ipynb 10
def points_to_strokes(_seq):
    strokes = np.split(_seq, np.where(_seq[:, 2] > 0)[0] + 1)
    return strokes

# %% ../nbs/07_svg_dataset.ipynb 11
def deltas_to_strokes(_seq):
    points = deltas_to_points(_seq)
    return points_to_strokes(points)
